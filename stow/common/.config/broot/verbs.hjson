###############################################################
# This file contains the verb definitions for broot
#
# Some verbs here are examples and not enabled by default: you
#  need to uncomment them if you want to use them.
#
# Documentation at https://dystroy.org/broot/verbs/
###############################################################

verbs: [

    # You should customize this standard opening of text files.
    # If you edit text files in your terminal (vi, emacs, helix, eg.), then
    #  you'll find it convenient to change the 'key' from 'ctrl-e' to 'enter'.
    #
    # If $EDITOR isn't set on your computer, you should either set it using
    #  something similar to
    #    export EDITOR=/usr/local/bin/nvim
    #  or just replace it with your editor of choice in the 'execution'
    #  pattern.
    # If your editor is able to open a file on a specific line, use {line}
    #  so that you may jump directly at the right line from a preview or
    #  a content search.
    # Examples depending on your favourite editor:
    #    execution: "nvim +{line} {file}"
    #    execution: "helix {file}:{line}"
    {
        invocation: edit
        shortcut: e
        key: enter
        apply_to: text_file
        execution: "$EDITOR {file}"
        leave_broot: false
    }

    # A convenient shortcut to create new text files in
    #  the current directory or below
    {
        invocation: create {subpath}
        execution: "$EDITOR {directory}/{subpath}"
        leave_broot: false
    }

    {
        invocation: git_diff
        shortcut: gd
        leave_broot: false
        execution: "git difftool -y {file}"
    }

    # This verb lets you launch a terminal on ctrl-T
    # (on exit you'll be back in broot)
    {
        invocation: terminal
        key: ctrl-t
        execution: "$SHELL"
        set_working_dir: true
        leave_broot: false
    }

    # A popular set of shortcuts for going up and down:
    #
    {
        key: ctrl-k
        execution: ":line_up"
    }
    {
        key: ctrl-j
        execution: ":line_down"
    }
    {
        key: ctrl-u
        execution: ":page_up"
    }
    {
        key: ctrl-d
        execution: ":page_down"
    }

    # If you develop using git, you might like to often switch
    # to the git status filter:
    {
        key: alt-g
        execution: ":toggle_git_status"
    }

    # You can reproduce the bindings of Norton Commander
    # on copying or moving to the other panel:
    {
        key: F5
        external: "cp -r {file} {other-panel-directory}"
        leave_broot: false
    }
    {
        key: F6
        external: "mv {file} {other-panel-directory}"
        leave_broot: false
    }
]
